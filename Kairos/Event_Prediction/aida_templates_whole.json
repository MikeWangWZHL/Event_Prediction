{
    "ArtifactExistence.ArtifactFailure.MechanicalFailure": "<MechanicalArtifact> mechanical artifact failed due to <Instrument> instrument at <Place> place",
    "ArtifactExistence.DamageDestroy.n/a": "<DamagerDestroyer> damaged or destroyed <Artifact> using <Instrument> instrument in <Place> place",
    "ArtifactExistence.DamageDestroy.Damage": "<Damager> damaged <Artifact> using <Instrument> instrument in <Place> place",
    "ArtifactExistence.DamageDestroy.Destroy": "<Destroyer> destroyed <Artifact> using <Instrument> instrument in <Place> place",
    "ArtifactExistence.Shortage.Shortage": "<Experiencer> experienced a shortage of <Supply> supply at <Place> place",
    "Conflict.Attack.n/a": "<Attacker> attacked <Target> using <Instrument> at <Place> place",
    "Conflict.Attack.AirstrikeMissileStrike": "<Attacker> attacked <Target> using <Instrument> at <Place> place",
    "Conflict.Attack.BiologicalChemicalPoisonAttack": "<Attacker> attacked <Target> using <Instrument> at <Place> place",
    "Conflict.Attack.Bombing": "<Attacker> attacked <Target> using <Instrument> at <Place> place",
    "Conflict.Attack.FirearmAttack": "<Attacker> attacked <Target> using <Instrument> at <Place> place",
    "Conflict.Attack.Hanging": "<Attacker> attacked <Target> using <Instrument> at <Place> place",
    "Conflict.Attack.Invade": "<Attacker> attacked <Target> using <Instrument> at <Place> place",
    "Conflict.Attack.SelfDirectedBattle": "<Attacker> attacked <Target> using <Instrument> at <Place> place",
    "Conflict.Attack.SetFire": "<Attacker> attacked <Target> using <Instrument> at <Place> place",
    "Conflict.Attack.Stabbing": "<Attacker> attacked <Target> using <Instrument> at <Place> place",
    "Conflict.Attack.StealRobHijack": "<Attacker> attacked <Target> using <Instrument> at <Place> place, in order to take <Artifact>",
    "Conflict.Attack.Strangling": "<Attacker> attacked <Target> using <Instrument> at <Place> place",
    "Conflict.Coup.Coup": "<DeposedEntity> was deposed by <DeposingEntity> at <Place> place",
    "Conflict.Demonstrate.n/a": "<Demonstrator> was in a demonstration at <Place> place",
    "Conflict.Demonstrate.MarchProtestPoliticalGathering": "<Demonstrator> was in a demonstration or protest at <Place> place",
    "Conflict.Yield.n/a": "<Yielder> yielded to <Recipient> at <Place> place",
    "Conflict.Yield.Retreat": "<Retreater> retreated from <Origin> place to <Destination> place",
    "Conflict.Yield.Surrender": "<Surrenderer> surrendered to <Recipient> at <Place> place",
    "Contact.Collaborate.n/a": "<Participant> communicated with <Participant> at <Place> place",
    "Contact.Collaborate.Correspondence": "<Participant> communicated remotely with <Participant> at <Place> place",
    "Contact.Collaborate.Meet": "<Participant> met face-to-face with <Participant> at <Place> place",
    "Contact.CommandOrder.n/a": "<Communicator> communicated with <Recipient> at <Place> place",
    "Contact.CommandOrder.Broadcast": "<Communicator> communicated to <Recipient> at <Place> place (one-way communication)",
    "Contact.CommandOrder.Correspondence": "<Communicator> communicated remotely with <Recipient> at <Place> place",
    "Contact.CommandOrder.Meet": "<Communicator> met face-to-face with <Recipient> at <Place> place",
    "Contact.CommitmentPromiseExpressIntent.n/a": "<Communicator> communicated with <Recipient> at <Place> place",
    "Contact.CommitmentPromiseExpressIntent.Broadcast": "<Communicator> communicated to <Recipient> at <Place> place (one-way communication)",
    "Contact.CommitmentPromiseExpressIntent.Correspondence": "<Communicator> communicated remotely with <Recipient> at <Place> place",
    "Contact.CommitmentPromiseExpressIntent.Meet": "<Communicator> met face-to-face with <Recipient> at <Place> place",
    "Contact.Discussion.n/a": "<Participant> communicated with <Participant> at <Place> place",
    "Contact.Discussion.Correspondence": "<Participant> communicated remotely with <Participant> at <Place> place",
    "Contact.Discussion.Meet": "<Participant> met face-to-face with <Participant> at <Place> place",
    "Contact.FuneralVigil.n/a": "<Participant> communicated with <Participant> during a funeral or vigil for <Deceased> at <Place> place",
    "Contact.FuneralVigil.Meet": "<Participant> met face-to-face with <Participant> during a funeral or vigil for <Deceased> at <Place> place",
    "Contact.MediaStatement.n/a": "<Communicator> communicated with <Recipient> at <Place> place",
    "Contact.MediaStatement.Broadcast": "<Communicator> communicated to <Recipient> at <Place> place (one-way communication)",
    "Contact.Negotiate.n/a": "<Participant> communicated with <Participant> at <Place> place",
    "Contact.Negotiate.Correspondence": "<Participant> communicated remotely with <Participant> at <Place> place",
    "Contact.Negotiate.Meet": "<Participant> met face-to-face with <Participant> at <Place> place",
    "Contact.Prevarication.n/a": "<Communicator> communicated with <Recipient> at <Place> place",
    "Contact.Prevarication.Broadcast": "<Communicator> communicated to <Recipient> at <Place> place (one-way communication)",
    "Contact.Prevarication.Correspondence": "<Communicator> communicated remotely with <Recipient> at <Place> place",
    "Contact.Prevarication.Meet": "<Communicator> met face-to-face with <Recipient> at <Place> place",
    "Contact.PublicStatementInPerson.n/a": "<Communicator> communicated with <Recipient> at <Place> place",
    "Contact.PublicStatementInPerson.Broadcast": "<Communicator> communicated to <Recipient> at <Place> place (one-way communication)",
    "Contact.RequestAdvise.n/a": "<Communicator> communicated with <Recipient> at <Place> place",
    "Contact.RequestAdvise.Broadcast": "<Communicator> communicated to <Recipient> at <Place> place (one-way communication)",
    "Contact.RequestAdvise.Correspondence": "<Communicator> communicated remotely with <Recipient> at <Place> place",
    "Contact.RequestAdvise.Meet": "<Communicator> met face-to-face with <Recipient> at <Place> place",
    "Contact.ThreatenCoerce.n/a": "<Communicator> communicated with <Recipient> at <Place> place",
    "Contact.ThreatenCoerce.Broadcast": "<Communicator> communicated to <Recipient> at <Place> place (one-way communication)",
    "Contact.ThreatenCoerce.Correspondence": "<Communicator> communicated remotely with <Recipient> at <Place> place",
    "Contact.ThreatenCoerce.Meet": "<Communicator> met face-to-face with <Recipient> at <Place> place",
    "Disaster.AccidentCrash.AccidentCrash": "<DriverPassenger> person in <Vehicle> vehicle crashed into <CrashObject> at <Place> place",
    "Disaster.DiseaseOutbreak.DiseaseOutbreak": "<Disease> disease broke out among <Victim> victims or population at <Place> place",
    "Disaster.FireExplosion.FireExplosion": "<FireExplosionObject> caught fire or exploded from <Instrument> instrument at <Place> place",
    "GenericCrime.GenericCrime.GenericCrime": "<Perpetrator> committed a crime against <Victim> at <Place> place",
    "Government.Agreements.n/a": "<Participant> and <Participant> signed an agreement in <Place> place",
    "Government.Agreements.AcceptAgreementContractCeasefire": "<Participant> and <Participant> signed an agreement in <Place> place",
    "Government.Agreements.RejectNullifyAgreementContractCeasefire": "<RejecterNullifier> rejected or nullified an agreement with <OtherParticipant> in <Place> place",
    "Government.Agreements.ViolateAgreement": "<Violator> violated an agreement with <OtherParticipant> in <Place> place",
    "Government.Convene.Convene": "<Convener> convened <ConvenedThing> at <Place> place",
    "Government.Formation.n/a": "<GPE> was formed by <Founder> in <Place> place",
    "Government.Formation.MergeGPE": "<Participant> merged with <Participant> at <Place> place",
    "Government.Formation.StartGPE": "<GPE> was started by <Founder> in <Place> place",
    "Government.Legislate.Legislate": "<GovernmentBody> legislature enacted <Law> law in <Place> place",
    "Government.Spy.Spy": "<Spy> spied on <ObservedEntity> to the benefit of <Beneficiary> in <Place> place",
    "Government.Vote.n/a": "<Voter> voted for <Candidate> on <Ballot> ballot with <Result> results in <Place> place",
    "Government.Vote.CastVote": "<Voter> voted for <Candidate> on <Ballot> ballot with <Result> results in <Place> place",
    "Government.Vote.ViolationsPreventVote": "<Preventer> prevented <Voter> from voting for <Candidate> on <Ballot> ballot in <Place> place",
    "Inspection.SensoryObserve.n/a": "<Observer> observed <ObservedEntity> in <Place> place",
    "Inspection.SensoryObserve.InspectPeopleOrganization": "<Inspector> inspected <InspectedEntity> in <Place> place",
    "Inspection.SensoryObserve.MonitorElection": "<Monitor> monitored <MonitoredEntity> taking part in an election in <Place> place",
    "Inspection.SensoryObserve.PhysicalInvestigateInspect": "<Inspector> inspected <InspectedEntity> in <Place> place",
    "Inspection.TargetAimAt.TargetAimAt": "<Targeter> physically targeted <Target> with <Instrument> instrument at <Place> place",
    "Justice.ArrestJailDetain.ArrestJailDetain": "<Jailer> arrested or jailed <Detainee> for <Crime> crime at <Place> place",
    "Justice.InitiateJudicialProcess.n/a": "<Prosecutor> initiated judicial process pertaining to <Defendant> before <JudgeCourt> court or judge for <Crime> crime in <Place> place",
    "Justice.InitiateJudicialProcess.ChargeIndict": "<Prosecutor> charged or indicted <Defendant> before <JudgeCourt> court or judge for <Crime> crime in <Place> place",
    "Justice.InitiateJudicialProcess.TrialHearing": "<Prosecutor> tried <Defendant> before <JudgeCourt> court or judge for <Crime> crime in <Place> place",
    "Justice.Investigate.n/a": "<Investigator> investigated <Defendant> in <Place> place",
    "Justice.Investigate.InvestigateCrime": "<Investigator> investigated <Defendant> for <Crime> crime in <Place> place",
    "Justice.JudicialConsequences.n/a": "<JudgeCourt> court or judge decided consequences of <Crime> crime, committed by <Defendant>, in <Place> place",
    "Justice.JudicialConsequences.Convict": "<JudgeCourt> court or judge convicted <Defendant> of <Crime> crime in <Place> place",
    "Justice.JudicialConsequences.Execute": "<Executioner> executed <Defendant> for <Crime> crime in <Place> place",
    "Justice.JudicialConsequences.Extradite": "<Extraditer> extradited <Defendant> for <Crime> crime from <Origin> place to <Destination> place",
    "Life.Die.n/a": "<Victim> died at <Place> place",
    "Life.Die.DeathCausedByViolentEvents": "<Killer> killed <Victim> using <Instrument> at <Place> place",
    "Life.Die.NonviolentDeath": "<Victim> died at <Place> place",
    "Life.Injure.n/a": "<Victim> was injured by <Injurer> at <Place> place",
    "Life.Injure.IllnessDegradationHungerThirst": "<Victim> has extreme hunger or thirst at <Place> place",
    "Life.Injure.IllnessDegradationPhysical": "<Victim> person has some physical degradation at <Place> place",
    "Life.Injure.IllnessDegredationSickness": "<Victim> has <Disease> sickness or illness at <Place> place, deliberately infected by <Injurer>",
    "Life.Injure.InjuryCausedByViolentEvents": "<Injurer> injured <Victim> using <Instrument> at <Place> place",
    "Manufacture.Artifact.n/a": "<Manufacturer> manufactured or created or produced <Artifact> using <Instrument> at <Place> place",
    "Manufacture.Artifact.Build": "<Manufacturer> manufactured or created or produced <Artifact> using <Instrument> at <Place> place",
    "Manufacture.Artifact.CreateIntellectualProperty": "<Manufacturer> manufactured or created or produced <Artifact> using <Instrument> at <Place> place",
    "Manufacture.Artifact.CreateManufacture": "<Manufacturer> manufactured or created or produced <Artifact> using <Instrument> at <Place> place",
    "Medical.Intervention.Intervention": "<Treater> treater treated <Patient> patient for <MedicalIssue> medical issue with <Instrument> means at <Place> place",
    "Movement.TransportArtifact.n/a": "<Transporter> transported <Artifact> in <Vehicle> from <Origin> place to <Destination> place",
    "Movement.TransportArtifact.BringCarryUnload": "<Transporter> transported <Artifact> in <Vehicle> from <Origin> place to <Destination> place",
    "Movement.TransportArtifact.DisperseSeparate": "<Transporter> transported <Artifact> in <Vehicle> from <Origin> place to <Destination> place",
    "Movement.TransportArtifact.Fall": "<Artifact> fell from <Origin> place to <Destination> place",
    "Movement.TransportArtifact.GrantEntry": "<Transporter> grants <Artifact> entry to <Origin> place from <Destination> place",
    "Movement.TransportArtifact.Hide": "<Transporter> concealed <Artifact> in <HidingPlace> place, transported in <Vehicle> vehicle from <Origin> place",
    "Movement.TransportArtifact.LossOfControl": "<Controller> lost control of moving <ControlledThing> at <Place> place",
    "Movement.TransportArtifact.NonviolentThrowLaunch": "<Transporter> transported <Artifact> in <Vehicle> from <Origin> place to <Destination> place",
    "Movement.TransportArtifact.PreventEntry": "<Preventer> prevents <Transporter> from transporting <Artifact> from <Origin> place to <Destination> place",
    "Movement.TransportArtifact.PreventExit": "<Preventer> prevents <Transporter> from transporting <Artifact> from <Origin> place to <Destination> place",
    "Movement.TransportArtifact.ReceiveImport": "<Transporter> transported <Artifact> in <Vehicle> from <Origin> place to <Destination> place",
    "Movement.TransportArtifact.SendSupplyExport": "<Transporter> transported <Artifact> in <Vehicle> from <Origin> place to <Destination> place",
    "Movement.TransportArtifact.SmuggleExtract": "<Transporter> transported <Artifact> in <Vehicle> from <Origin> place to <Destination> place",
    "Movement.TransportPerson.n/a": "<Transporter> transported <Passenger> in <Vehicle> from <Origin> place to <Destination> place",
    "Movement.TransportPerson.BringCarryUnload": "<Transporter> transported <Passenger> in <Vehicle> from <Origin> place to <Destination> place",
    "Movement.TransportPerson.DisperseSeparate": "<Transporter> transported <Passenger> in <Vehicle> from <Origin> place to <Destination> place",
    "Movement.TransportPerson.EvacuationRescue": "<Transporter> transported <Passenger> in <Vehicle> from <Origin> place to <Destination> place",
    "Movement.TransportPerson.Fall": "<Passenger> fell from <Origin> place to <Destination> place",
    "Movement.TransportPerson.GrantEntryAsylum": "<Granter> grants entry to <Transporter> transporting <Passenger> from <Origin> place to <Destination> place",
    "Movement.TransportPerson.Hide": "<Transporter> concealed <Passenger> in <HidingPlace> place, transported in <Vehicle> vehicle from <Origin> place",
    "Movement.TransportPerson.PreventEntry": "<Preventer> prevents <Transporter> from transporting <Passenger> from <Origin> place to <Destination> place",
    "Movement.TransportPerson.PreventExit": "<Preventer> prevents <Transporter> from transporting <Passenger> from <Origin> place to <Destination> place",
    "Movement.TransportPerson.SelfMotion": "<Transporter> moved in <Vehicle> from <Origin> place to <Destination> place",
    "Movement.TransportPerson.SmuggleExtract": "<Transporter> transported <Passenger> in <Vehicle> from <Origin> place to <Destination> place",
    "Personnel.Elect.n/a": "<Voter> elected <Candidate> in <Place> place",
    "Personnel.Elect.WinElection": "<Voter> elected <Candidate> in <Place> place",
    "Personnel.EndPosition.n/a": "<Employee> stopped working at <PlaceOfEmployment> in <Place> place",
    "Personnel.EndPosition.FiringLayoff": "<Employee> stopped working at <PlaceOfEmployment> in <Place> place",
    "Personnel.EndPosition.QuitRetire": "<Employee> stopped working at <PlaceOfEmployment> in <Place> place",
    "Personnel.StartPosition.n/a": "<Employee> started working at <PlaceOfEmployment> in <Place> place",
    "Personnel.StartPosition.Hiring": "<Employee> started working at <PlaceOfEmployment> in <Place> place",
    "Transaction.Transaction.n/a": "A transaction occurred between <Participant> and <Participant> for the benefit of <Beneficiary> at <Place> place",
    "Transaction.Transaction.EmbargoSanction": "<Preventer> prevented <Giver> from giving <ArtifactMoney> to <Recipient> at <Place> place",
    "Transaction.Transaction.GiftGrantProvideAid": "<Giver> gave something to <Recipient> for the benefit of <Beneficiary> at <Place> place",
    "Transaction.TransferMoney.n/a": "<Giver> gave <Money> money to <Recipient> for the benefit of <Beneficiary> at <Place> place",
    "Transaction.TransferMoney.BorrowLend": "<Giver> gave <Money> money to <Recipient> for the benefit of <Beneficiary> at <Place> place",
    "Transaction.TransferMoney.EmbargoSanction": "<Preventer> prevented <Giver> from giving <Money> to <Recipient> at <Place> place",
    "Transaction.TransferMoney.GiftGrantProvideAid": "<Giver> gave <Money> money to <Recipient> for the benefit of <Beneficiary> at <Place> place",
    "Transaction.TransferMoney.PayForService": "<Giver> gave <Money> money to <Recipient> for the benefit of <Beneficiary> at <Place> place",
    "Transaction.TransferMoney.Purchase": "<Giver> gave <Money> money to <Recipient> for the benefit of <Beneficiary> at <Place> place",
    "Transaction.TransferOwnership.n/a": "<Giver> gave <Artifact> to <Recipient> for the benefit of <Beneficiary> at <Place> place",
    "Transaction.TransferOwnership.BorrowLend": "<Giver> gave <Artifact> to <Recipient> for the benefit of <Beneficiary> at <Place> place",
    "Transaction.TransferOwnership.EmbargoSanction": "<Preventer> prevented <Giver> from giving <Artifact> to <Recipient> at <Place> place",
    "Transaction.TransferOwnership.GiftGrantProvideAid": "<Giver> gave <Artifact> to <Recipient> for the benefit of <Beneficiary> at <Place> place",
    "Transaction.TransferOwnership.Purchase": "<Giver> gave <Artifact> to <Recipient> for the benefit of <Beneficiary> at <Place> place",
    "Transaction.Transaction.TransferControl": "<Giver> transferred control of <TerritoryOrFacility> to <Recipient> for the benefit of <Beneficiary> in <Place> place"
}